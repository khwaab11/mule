// CONNECT TO SQLITE DATABASES //
1. Downloaded SQLite sqlite-dll-win64-x64-3370200 and sqlite-tools-win32-x86-3370200 (1)
2. Installed ECLIPSE IDE 

****CONNECT SQLite database and created a new SQLite database named "usersdb.db"

public class SQLiteDemo {

	public static void main(String[] args) {
		String jdbcUrl = "jdbc:sqlite:/D:\\SQLite\\sqlite-tools-win32-x86-3370200 (1)\\usersdb.db";
    }
    
    
****CREATE table movies

 package net.codejava;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class SQLiteDemo {

	public static void main(String[] args) {
		String jdbcUrl = "jdbc:sqlite:/D:\\SQLite\\sqlite-tools-win32-x86-3370200 (1)\\usersdb.db";
		
			Connection connection = DriverManager.getConnection(jdbcUrl);
			String sql = "create table movies(moviename varchar(30), actor varchar(30), actress varchar(30))";
			
			Statement statement = connection.createStatement();
			statement.xecuteUpdate(sql);
      
      System.out.println("table created');
      
      
      
      
      
      
******INSERT VALUES INTO TABE MOVIES


package net.codejava;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class SQLiteDemo {

	public static void main(String[] args) {
		String jdbcUrl = "jdbc:sqlite:/D:\\SQLite\\sqlite-tools-win32-x86-3370200 (1)\\usersdb.db";
		
			Connection connection = DriverManager.getConnection(jdbcUrl);
			String sql = "insert into movies("bahubali', 'prabhas', 'anushka')";
			
			Statement statement = connection.createStatement();
			int rows  =statement.executeUpdate(sql);
      if (rows > 0){
          System.out.println("a row created");
       }
     }
  }   
      
     
      
      

******SELECT STATEMENT TO QUERY ALL ROWS

package net.codejava;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class SQLiteDemo {

	public static void main(String[] args) {
		String jdbcUrl = "jdbc:sqlite:/D:\\SQLite\\sqlite-tools-win32-x86-3370200 (1)\\usersdb.db";
		try {
			Connection connection = DriverManager.getConnection(jdbcUrl);
			String sql = "SELECT * FROM movies";
			
			Statement statement = connection.createStatement();
			ResultSet result = statement.executeQuery(sql);
			
			while(result.next()) {
				String name = result.getNString("moviename");
				String email = result.getNString("actor");
        String email = result.getNString("actress");
				
				System.out.println(moviename + " | " + actor + " | " + actress);
				
				
			}
		} catch (SQLException e) {
			System.out.println("error connecting to sql databse");
			e.printStackTrace();
		}

	}
}








******QUERY BASED ON ACTORS NAME

package net.codejava;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class SQLiteDemo {

	public static void main(String[] args) {
		String jdbcUrl = "jdbc:sqlite:/D:\\SQLite\\sqlite-tools-win32-x86-3370200 (1)\\usersdb.db";
		try {
			Connection connection = DriverManager.getConnection(jdbcUrl);
			String sql = "SELECT * FROM movies where actor ="Prabhas";
			
			Statement statement = connection.createStatement();
			ResultSet result = statement.executeQuery(sql);
			
			while(result.next()) {
				String name = result.getNString("moviename");
				String email = result.getNString("actor");
        String email = result.getNString("actress");
				
				System.out.println(moviename + " | " + actor + " | " + actress);
				
				
			}
		} catch (SQLException e) {
			System.out.println("error connecting to sql databse");
			e.printStackTrace();
		}

	}
}







            
 
 
    
    
